plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.mysql:mysql-connector-j'


    // 롬복
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // @Valid 기능(유효성검사)
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // JWT - jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    //QueryDSL 기능
    implementation 'io.github.openfeign.querydsl:querydsl-jpa:6.11'
    annotationProcessor 'io.github.openfeign.querydsl:querydsl-apt:6.11:jpa'

    // bcrypt
    implementation 'at.favre.lib:bcrypt:0.10.2'
    // OpenCsv
    implementation 'com.opencsv:opencsv:5.9'



}
def querydslDir = "$buildDir/generated/querydsl"

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}
sourceSets {
    main.java.srcDirs += querydslDir
}
tasks.named('test') {
    useJUnitPlatform()
}
